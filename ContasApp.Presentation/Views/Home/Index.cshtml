@* Definindo a classe de modelo de dados da página *@
@model ContasApp.Presentation.Models.DashboardViewModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h5>Seja bem vindo ao sistema!</h5>
<p>Selecione o mês/ano para consulta de seu resumo financeiro:</p>

@using(Html.BeginForm())
{
    <div class="row mb-2">
        <div class="col-md-2">
            @Html.DropDownListFor(model => model.Mes, ViewBag.Meses as List<SelectListItem>, 
                new { @class = "form-select" })
        </div>
        <div class="col-md-2">
            @Html.DropDownListFor(model => model.Ano, ViewBag.Ano as List<SelectListItem>, 
                new { @class = "form-select" })
        </div>
        <div class="col-md-8">
            <input type="submit" class="btn btn-primary" value="Aplicar filtro"/>
        </div>
    </div>
}

<div class="row mb-5 mt-3">
    <div class="col">
        <div id="graficoTipos"></div>
    </div>
    <div class="col">
        <div id="graficoCategorias"></div>
    </div>
</div>

@section scripts {

    <script>
        // Dados para o gráfico de pizza
        const dadosPizza = []; //vazio

        // Dados para o gráfico de barras
        const dadosBarras = [];
    </script>

    @foreach (var item in ViewBag.ReceitasEDespesas)
    {
        <script>
            dadosPizza.push(['@item.Nome', @item.Valor]);
        </script>
    }

    @foreach (var item in ViewBag.TotalCategorias)
    {
        <script>
            dadosBarras.push({ categoria: '@item.Categoria', valor: parseFloat(@item.Total) });
        </script>
    }

    <script>

        // Cores para os dados
        const coresPizza = ['#5cb85c', '#d9534f'];

        // Configurações do gráfico de pizza
        const opcoesPizza = {
            chart: {
                type: 'pie'
            },
            title: {
                text: 'Contas a Receber e Contas a Pagar'
            },
            series: [{
                name: 'Valor',
                data: dadosPizza
            }],
            plotOptions: {
                pie: {
                    colors: coresPizza,
                    innerSize: '50%', 
                    showInLegend: true,
                    dataLabels: {
                        enabled: false 
                    },
                }
            },
        };

        // Configurações do gráfico de barras
        const opcoesBarras = {
            chart: {
                type: 'column'
            },
            title: {
                text: 'Valor de Contas por Categoria'
            },
            xAxis: {
                categories: dadosBarras.map(item => item.categoria)
            },
            yAxis: {
                title: {
                    text: 'Valor'
                }
            },
            series: [{
                name: 'Valor',
                data: dadosBarras.map(item => item.valor)
            }]
        };

        // Renderizar os gráficos
        Highcharts.chart('graficoTipos', opcoesPizza);
        Highcharts.chart('graficoCategorias', opcoesBarras);

    </script>
}